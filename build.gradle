buildscript {
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    dependencies {
        classpath "systems.danger:danger-plugin-installer:0.1-alpha"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id 'org.jetbrains.dokka' version '1.4.32'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'danger-kotlin-plugin-installer'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group 'com.rojanthomas'
archivesBaseName = "danger-kotlin-jira"
version '0.1.1'

dangerPlugin {
    outputJar = "$buildDir/libs/${project.getName()}-${version}.jar"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "systems.danger:danger-kotlin-sdk:1.2"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation("io.mockk:mockk:1.11.0")
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    // For pure Kotlin libraries, in case you have them
    from sourceSets.main.java.srcDirs
    from sourceSets.main.kotlin.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    sign publishing.publications
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("SONATYPE_USERNAME")
                password = System.getenv("SONATYPE_PASSWORD")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            artifact("$buildDir/libs/${project.getName()}-${version}.jar")
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Danger Kotlin Jira'
                packaging = 'jar'
                description = 'A JIRA plugin for danger-kotlin'
                url = 'https://github.com/rojanthomas/danger-kotlin-jira'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/rojanthomas/danger-kotlin-jira/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'rojanthomas'
                        name = 'Rojan Thomas'
                        email = 'rojanthomas@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/rojanthomas/danger-kotlin-jira.git'
                    developerConnection = 'scm:git:ssh://github.com/rojanthomas/danger-kotlin-jira.git'
                    url = 'https://github.com/rojanthomas/danger-kotlin-jira'
                }
            }
        }
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {
        allprojects {
            ext."signing.gnupg.keyName" = System.getenv("GPG_KEY_ID")
            ext."signing.gnupg.passphrase" = System.getenv("GPG_SIGNING_KEY_PASSPHRASE")
        }
    }
}